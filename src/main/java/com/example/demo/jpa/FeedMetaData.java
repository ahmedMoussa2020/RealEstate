package com.example.demo.jpa;

import java.io.Serializable;
import java.sql.Timestamp;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

// annotation marks this class as a persistent entity in the database. This means that objects of this class will be saved as rows in the corresponding database table.
@Entity

@Table(name="\"FeedMetaData\"")
// annotation is used to specify the name of the database table associated with this entity. In this case, the name of the table is FeedMetaData.

// implements Serializable is a marker interface in Java that tells the compiler that the class is serializable.
public class FeedMetaData implements Serializable {

	// This is a unique identifier for the class version used for serialization and deserialization.
	private static final long serialVersionUID = 1L;

	@Id // @Id: This annotation specifies that the field is the primary key of the database table.

	// @GeneratedValue: This annotation specifies that the value of the primary key is automatically generated by the database. This annotation takes a "strategy" parameter that specifies the generation strategy. Here, the strategy is GenerationType.IDENTITY.
	@GeneratedValue(strategy=GenerationType.IDENTITY)

	// @Column(name="\"feedMetaDataId\""): This annotation specifies the mapping of the annotated field to a column in the database table. Here, the column name is feedMetaDataId.
	@Column(name="\"feedMetaDataId\"")
	private Integer feedMetaDataId;

	private String comment;

	@Column(name="\"createdOn\"")
	// private Boolean isLike represents a boolean flag indicating whether the feed metadata represents a "like" action and is mapped to the isLike column in the database table. The variable isLike is annotated as shown below:
	private Timestamp createdOn;

	@ManyToOne
	@JsonIgnore // annotation on the feed field specifies that this field should be excluded from the JSON representation of the entity.
	@JoinColumn(name="\"feedId\"") // annotation specifies the foreign key column feedId that links the FeedMetaData table to the Feed table.
	private Feed feed;

	@ManyToOne
	@JoinColumn(name="\"actionUserId\"") // This annotation specifies the foreign key column actionUserId that links the FeedMetaData table to the User table.
	private User user;

	public FeedMetaData() {
	}

	public Integer getFeedMetaDataId() {
		return feedMetaDataId;
	}

	public void setFeedMetaDataId(Integer feedMetaDataId) {
		this.feedMetaDataId = feedMetaDataId;
	}

	public String getComment() {
		return comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	public Timestamp getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Timestamp createdOn) {
		this.createdOn = createdOn;
	}

	public Feed getFeed() {
		return feed;
	}

	public void setFeed(Feed feed) {
		this.feed = feed;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}


}
